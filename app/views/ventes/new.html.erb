<div class="max-w-3xl mx-auto bg-white shadow rounded p-6">
  <h1 class="text-2xl font-semibold mb-6">ðŸ›’ Encaissement</h1>

  <!-- ðŸ”„ FORMULAIRE GET : SÃ©lection de l'AVOIR -->
  <%= form_with url: new_vente_path, method: :get, local: true do %>
    <%= hidden_field_tag :client_nom, params[:client_nom] %>
    <div class="mb-4">
      <label for="avoir_id" class="block font-medium mb-1">ðŸ’³ Avoir Ã  utiliser</label>
      <%= select_tag :avoir_id,
        options_for_select([["-- Aucun avoir --", ""]] + @avoirs_valides.map { |a|
          ["NÂ°#{a.id.to_s.rjust(6, "0")} â€” #{number_to_currency(a.montant)} â€” #{l(a.created_at.to_date)}", a.id]
        }, selected: params[:avoir_id]),
        class: "w-full mb-4 p-2 border border-gray-400 rounded-lg bg-gray-50",
        onchange: "this.form.submit();" %>
    </div>
  <% end %>

  <!-- FORMULAIRE CODE-BARRES -->
  <%= form_with url: recherche_produit_ventes_path, method: :post, local: true do |f| %>
    <div class="mb-4">
      <%= f.label :code_barre, "Code-barres" %>
      <%= f.text_field :code_barre, autofocus: true, autocomplete: "off", class: "w-full mb-4 p-2 border border-gray-400 rounded-lg bg-gray-50" %>
    </div>
  <% end %>

  <% if @produits.any? %>
    <table class="table-auto w-full mb-6 border">
      <thead>
        <tr class="bg-gray-100">
          <th class="px-4 py-2">Produit</th>
          <th class="px-4 py-2">QuantitÃ©</th>
          <th class="px-4 py-2">Prix</th>
          <th class="px-4 py-2">Remise</th>
          <th class="px-4 py-2">Total</th>
          <th class="px-4 py-2">Stock</th>
          <th class="px-4 py-2">Actions</th>
        </tr>
      </thead>
      <tbody>
        <% total = 0 %>
        <% @produits.each do |id, produit| %>
          <% quantite = @quantites[id] %>
          <% prix_unitaire = produit.en_promo? && produit.prix_promo.present? ? produit.prix_promo : produit.prix %>
          <% valeur = session[:ventes][produit.id.to_s] rescue {} %>
          <% remise = valeur.is_a?(Hash) ? valeur["remise"].to_d : 0.to_d %>
          <% total_produit = (prix_unitaire * quantite * (1 - remise / 100)).round(2) %>
          <% total += total_produit %>
          <tr class="border-t">
            <td class="px-4 py-2 text-center"><%= produit.nom %></td>
            <td class="px-4 py-2 text-center"><%= quantite %></td>
            <td class="px-4 py-2 text-center whitespace-nowrap">
              <% if produit.en_promo? && produit.prix_promo.present? %>
                <span class="relative inline-block text-base text-gray-500 font-medium">
                  <span class="inline-block"><%= number_to_currency(produit.prix) %></span>
                  <span style="position: absolute; top: 50%; left: 0; width: 100%; height: 2px; background-color: red; transform: rotate(-15deg); transform-origin: left center;"></span>
                </span>
                <span class="ml-2 text-red-600 font-bold text-lg"><%= number_to_currency(produit.prix_promo) %></span>
              <% else %>
                <%= number_to_currency(produit.prix) %>
              <% end %>
            </td>
            <td class="px-4 py-2 text-center">
              <%= form_with url: modifier_remise_ventes_path, method: :post, local: true do %>
                <%= hidden_field_tag :produit_id, produit.id %>
                <%= select_tag :remise,
                  options_for_select((0..70).step(10).map { |v| ["#{v} %", v] }, selected: remise.to_i),
                  class: "w-24 border rounded text-right",
                  onchange: "this.form.submit();" %>
              <% end %>
            </td>
            <td class="px-4 py-2 text-center"><%= number_to_currency(total_produit) %></td>
            <td class="px-4 py-2 text-center text-sm text-gray-500">
              Stock : <%= produit.stock %>
            </td>
            <td class="px-4 py-2 text-center">
              <%= button_to "Retirer", retirer_produit_ventes_path(produit_id: produit.id), method: :post, class: "text-red-600" %>
            </td>
          </tr>
        <% end %>
        <tr class="border-t font-semibold">
          <td colspan="3" class="px-4 py-2 text-right">Total :</td>
          <td colspan="3" class="px-4 py-2 text-right"><%= number_to_currency(@total_net) %></td>
        </tr>
      </tbody>
    </table>
  <% else %>
    <p class="text-gray-500 italic mb-6">Aucun produit pour le moment.</p>
  <% end %>

  <!-- FORMULAIRE ENCAISSEMENT -->
  <%= form_with url: ventes_path, method: :post, local: true do %>
    <%= hidden_field_tag :avoir_id, params[:avoir_id] %>
    <div class="mb-4">
      <label class="block font-medium text-gray-700 mb-1">Client</label>
      <div class="flex items-center gap-2">
        <%= text_field_tag :client_nom, params[:client_nom], list: "clients_list",
              class: "flex-1 rounded border border-gray-300 shadow-sm px-2 py-1",
              placeholder: "Nom du client (ou vide pour sans client)" %>
        <%= link_to "âž• Nouveau client", new_client_path(retour: "ventes"),
              data: { turbo_frame: "client_form" },
              class: "whitespace-nowrap px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600" %>
      </div>
      <datalist id="clients_list">
        <% Client.order(:nom).pluck(:nom).uniq.each do |nom| %>
          <option value="<%= nom %>">
        <% end %>
      </datalist>
    </div>
    
    <% if params[:avoir_id].present? && (avoir = Avoir.find_by(id: params[:avoir_id])) %>
      <% reste = total - avoir.montant %>
      <div class="bg-yellow-100 text-yellow-900 px-4 py-2 rounded mb-4">
        Avoir utilisÃ© : <strong><%= number_to_currency(avoir.montant) %></strong><br>
        <% if reste <= 0 %>
          âœ… Le total est couvert par lâ€™avoir. Un nouvel avoir sera Ã©mis pour un montant de <strong><%= number_to_currency(-reste) %></strong>.
        <% else %>
          ðŸ’³ Reste Ã  payer aprÃ¨s avoir : <strong><%= number_to_currency(reste) %></strong>
        <% end %>
      </div>
    <% end %>

    <div class="mb-4">
      <label class="block font-medium text-gray-700 mb-2">ðŸ’³ Paiements</label>
      <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
        <div>
          <label for="cb" class="block text-sm">CB</label>
          <%= number_field_tag :cb, params[:cb], step: 0.01, min: 0, class: "w-full p-2 border rounded", oninput: "majResteAPayer()" %>
        </div>
        <div>
          <label for="espece" class="block text-sm">EspÃ¨ces</label>
          <%= number_field_tag :espece, params[:espece], step: 0.01, min: 0, class: "w-full p-2 border rounded", oninput: "majResteAPayer()" %>
        </div>
        <div>
          <label for="cheque" class="block text-sm">ChÃ¨que</label>
          <%= number_field_tag :cheque, params[:cheque], step: 0.01, min: 0, class: "w-full p-2 border rounded", oninput: "majResteAPayer()" %>
        </div>
        <div>
          <label for="amex" class="block text-sm">AMEX</label>
          <%= number_field_tag :amex, params[:amex], step: 0.01, min: 0, class: "w-full p-2 border rounded", oninput: "majResteAPayer()" %>
        </div>
      </div>
    </div>
    <div class="text-right mt-2 font-semibold">
      Reste Ã  payer : <span id="reste-a-payer"><%= number_to_currency(@total_net) %></span>
    </div>
    
    <script>
      function majResteAPayer() {
        let total = <%= @total_net || 0 %>;

        <% if params[:avoir_id].present? && (avoir = Avoir.find_by(id: params[:avoir_id])) %>
          total -= <%= avoir.montant %>;
        <% end %>

        // Parse des champs de paiement
        let cb     = parseFloat(document.getElementById("cb").value)     || 0;
        let espece = parseFloat(document.getElementById("espece").value) || 0;
        let cheque = parseFloat(document.getElementById("cheque").value) || 0;
        let amex   = parseFloat(document.getElementById("amex").value)   || 0;
        let avoir  = parseFloat(document.getElementById("avoir")?.value) || 0;

        let total_paye = cb + espece + cheque + amex + avoir;
        let reste = total - total_paye;
        if (Math.abs(reste) < 0.01) reste = 0;

        const resteElement = document.getElementById("reste-a-payer");
        if (resteElement) {
          resteElement.textContent = reste.toLocaleString("fr-FR", {
            style: "currency",
            currency: "EUR"
          });
        }
      }
    </script>

    <div class="text-right mt-6">
      <button type="submit"
        class="w-full bg-green-600 text-white font-semibold text-lg py-3 rounded hover:bg-green-700">
        ðŸ’³ Encaisser maintenant
      </button>
    </div>
  <% end %>
</div>
